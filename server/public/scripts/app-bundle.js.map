{"version":3,"sources":["src/app.js","src/auth-config.js","src/environment.js","src/main.js","src/modules/galleries.js","src/modules/home.js","src/modules/pictures.js","src/resources/index.js","src/resources/data/data-services.js","src/resources/data/galleries.js","src/resources/data/mypics.js","src/resources/data/users.js","src/resources/elements/flatpickr.js","src/resources/value-converters/date-format.js"],"names":["App","configureRouter","config","router","addPipelineStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","window","regeneratorRuntime","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","start","then","setRoot","Gallery","galleries","mypics","message","user","JSON","parse","sessionStorage","getItem","showList","activate","getUserGallery","_id","logout","removeItem","createGallery","galleryObj","gallery","description","userId","editGallery","deleteGallery","savegallery","save","response","error","alert","back","givePictures","galleryId","getUserPics","createPicture","picsObj","pics","dateDue","Date","editPics","deletePics","changeFiles","filesToUpload","Array","push","files","removeFile","index","splice","savepics","picsId","length","uploadFile","back2","Home","users","showLogin","loginError","login","email","password","setItem","stringify","navigate","catch","console","log","showRegister","firstName","lastName","registerError","serverResponse","Pictures","priorities","priority","globalResources","DataServices","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","localStorage","append","method","url","status","get","fetch","json","data","post","content","body","object","put","delete","uploadFiles","Galleries","GALLERY_SERVICE","galleriesArray","id","i","formData","FormData","forEach","item","MyPics","PICS_SERVICE","mypicsArray","Users","USER_SERVICE","FlatPickerCustomElement","Element","defaultBindingMode","twoWay","element","bind","defaultConfig","altInput","altFormat","wrap","_config","Object","assign","onChange","onMonthChange","onYearChange","attached","flatpickr","querySelector","selectedDates","dateStr","instance","value","valueChanged","newDate","undefined","setDate","DateFormatValueConverter","toView","format"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep);     \n    config.map([\n      { \n\troute: ['', 'home'],\n\t moduleId: './modules/home',\n\t name: 'Home' \n      },\n      {\n        route:'galleries',\n        moduleId:'./modules/galleries',\n        name: 'Gallery',\n        auth:true\n      },\n      {\n\t route: 'pictures',\n\t moduleId: './modules/pictures',\n   name: 'Pictures',\n   auth: true \n     }\n    ]);\n  }\n}\n","var authConfig = {\n    baseUrl: \"http://localhost:5000/api\",\n    loginUrl: '/users/login',\n    tokenName: 'token',\n    authHeader: 'Authorization',\n    authToken: '',\n    logoutRedirect: '#/home'\n  }\n  \n  export default authConfig;\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport config from './auth-config';\nimport regeneratorRuntime from 'regenerator-runtime';\nwindow.regeneratorRuntime = regeneratorRuntime;\n\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig)=>{\n      baseConfig.configure(config);\n })\n\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\nimport { AuthService } from 'aurelia-auth';\nimport { Galleries } from '../resources/data/galleries';\nimport { MyPics } from '../resources/data/mypics';\n\n\n@inject(Router,AuthService,Galleries,MyPics)\nexport class Gallery {\n    constructor(router,auth,galleries,mypics) {\n        this.router = router;\n        this.galleries = galleries;\n        this.auth = auth;\n        this.mypics = mypics;\n        this.message = 'Galleries';\n        this.user = JSON.parse(sessionStorage.getItem('user'));\n        this.showList = 'showGalleries';\n        // this.showDeleted = false;\n        // this.priorities = ['Low', 'Medium', 'High', 'Critical'];\n\n    }\n    async activate() {\n        await this.galleries.getUserGallery(this.user._id);\n    }\n\n\n    logout() {\n        sessionStorage.removeItem('user');\n        this.auth.logout();\n    }\n    createGallery() {\n        this.galleryObj = {\n            gallery: \"\",\n            description: \"\",\n            // dateDue: new Date(),\n            userId: this.user._id,\n            // priority: this.priorities[0]\n        }\n        this.showList = 'showGalleriesForm';\n    }\n    editGallery(gallery) {\n        this.galleryObj = gallery;\n        this.showList = 'showGalleriesForm';\n    }\n\n    deleteGallery(gallery) {\n        this.galleries.deleteGallery(gallery._id);\n    }\n\n    // completeGallery(pics) {\n    //     pics.completed = !pics.completed;\n    //     this.picsObj = pics;\n    //     this.savepics();\n    // }\n\n    // toggleShowDeleted() {\n    //     this.showCompleted = !this.showCompleted;\n    // }\n    // changeFiles() {\n    //     this.filesToUpload = new Array();\n    //     this.filesToUpload.push(this.files[0]);\n    // }\n    // removeFile(index) {\n    //     this.filesToUpload.splice(index, 1);\n    // }\n\n    async savegallery() {\n        if (this.galleryObj) {\n            let response = await this.galleries.save(this.galleryObj);\n            if (response.error) {\n                alert(\"There was an error creating the pics\");\t\t\t\t\t\t\n            }\n            this.showList = 'showGalleries';\n        }\n    }\n    back(){\n        this.showList='showGalleries';\n      }\n\n     async givePictures(gallery){\n          //get images for gallery._id\n          this.galleryId=gallery._id;\n          this.showList = 'showImages',\n          await this.mypics.getUserPics(this.galleryId);\n      }\n\n    //   async activate() {\n    //     await this.mypics.getUserPics(this.user._id);\n    // }\n\n    createPicture() {\n        this.picsObj = {\n            pics: \"\",\n            description: \"\",\n            dateDue: new Date(),\n            userId: this.user._id,\n            galleryId:this.galleryId\n        }\n        this.showList = 'showImagesForm';\n    }\n    editPics(pics) {\n        this.picsObj = pics;\n        this.showList = 'showImagesForm';\n    }\n\n    deletePics(pics) {\n        this.mypics.deletePics(pics._id);\n    }\n\n    // completePics(pics) {\n    //     pics.completed = !pics.completed;\n    //     this.picsObj = pics;\n    //     this.savepics();\n    // }\n\n    // toggleShowDeleted() {\n    //     this.showCompleted = !this.showCompleted;\n    // }\n    changeFiles() {\n        this.filesToUpload = new Array();\n        this.filesToUpload.push(this.files[0]);\n    }\n    removeFile(index) {\n        this.filesToUpload.splice(index, 1);\n    }\n\n    async savepics() {\n        if (this.picsObj) {\n            let response = await this.mypics.save(this.picsObj);\n            if (response.error) {\n                alert(\"There was an error creating the pics\");\n            } else {\n                //Could provide feeback\t\n                var picsId = response._id;\n                                if(this.filesToUpload && this.filesToUpload.length){\n                                    await this.mypics.uploadFile(this.filesToUpload, this.user._id, picsId);\n                                    this.filesToUpload = [];\n                                }\t\t\t\t\t\t\t\t\n            }\n            this.showList = 'showImages';\n        }\n    }\n    back(){\n        this.showList='showImages';\n      }\n\n      back2(){\n          this.showList='showGalleries';\n      }\n}","import { inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\nimport { Users } from '../resources/data/users';\nimport {AuthService} from 'aurelia-auth';\n\n\n@inject(Router,Users,AuthService)\nexport class Home {\n    constructor(router,users,auth) {\n        this.router = router;\n        this.users=users;   \n        this.message = 'Photobook';\n        this.showLogin = true;\n        this.auth = auth;\n        this.loginError = ''; \n\n    }\n\n    login() {\n        return this.auth.login(this.email, this.password)\n          .then(response => {\n        sessionStorage.setItem(\"user\", JSON.stringify(response.user));\n        this.loginError = \"\";\n        this.router.navigate('galleries');\n          })\n          .catch(error => {\n            console.log(error);\n            this.loginError = \"Invalid credentials.\";\n          });\n      };\n    \n\n    showRegister(){\n        this.user = {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            password: \"\"\n            }\n            this.registerError = \"\";            \n        this.showLogin = false;\n        \n    }\n    \u000b async save() {\n              let serverResponse = await this.users.save(this.user);\n              if (!serverResponse.error) {\n                this.showLogin = true;\n              } else {\n                this.registerError = \"There was a problem registering the user.\"\n              }\n        }        \n    \n}\n\n","import { inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\nimport { AuthService } from 'aurelia-auth';\nimport { MyPics } from '../resources/data/mypics';\n\n\n@inject(Router,AuthService,MyPics)\nexport class Pictures {\n    constructor(router,auth,mypics) {\n        this.router = router;\n        this.mypics = mypics;\n        this.auth = auth;\n        this.message = 'Galleries';\n        this.user = JSON.parse(sessionStorage.getItem('user'));\n        this.showList = true;\n        // this.showDeleted = false;\n        this.priorities = ['Low', 'Medium', 'High', 'Critical'];\n\n    }\n    async activate() {\n        await this.mypics.getUserPics(this.user._id);\n    }\n\n\n    logout() {\n        sessionStorage.removeItem('user');\n        this.auth.logout();\n    }\n    createPicture() {\n        this.picsObj = {\n            pics: \"\",\n            description: \"\",\n            dateDue: new Date(),\n            userId: this.user._id,\n            priority: this.priorities[0]\n        }\n        this.showList = false;\n    }\n    editPics(pics) {\n        this.picsObj = pics;\n        this.showList = false;\n    }\n\n    deletePics(pics) {\n        this.mypics.deletePics(pics._id);\n    }\n\n    // completePics(pics) {\n    //     pics.completed = !pics.completed;\n    //     this.picsObj = pics;\n    //     this.savepics();\n    // }\n\n    // toggleShowDeleted() {\n    //     this.showCompleted = !this.showCompleted;\n    // }\n    changeFiles() {\n        this.filesToUpload = new Array();\n        this.filesToUpload.push(this.files[0]);\n    }\n    removeFile(index) {\n        this.filesToUpload.splice(index, 1);\n    }\n\n    async savepics() {\n        if (this.picsObj) {\n            let response = await this.mypics.save(this.picsObj);\n            if (response.error) {\n                alert(\"There was an error creating the pics\");\n            } else {\n                //Could provide feeback\t\n                var picsId = response._id;\n                                if(this.filesToUpload && this.filesToUpload.length){\n                                    await this.mypics.uploadFile(this.filesToUpload, this.user._id, picsId);\n                                    this.filesToUpload = [];\n                                }\t\t\t\t\t\t\t\t\n            }\n            this.showList = true;\n        }\n    }\n    back(){\n        this.showList=true;\n      }\n}\n","export function configure(config) {\n  config.globalResources([ './value-converters/date-format','./elements/flatpickr']);\n}\n","import { inject } from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\n\n@inject(HttpClient)\nexport class DataServices {\n\n\tconstructor(http) {\n\t\tthis.httpClient = http;\n        this.BASE_URL = \"http://localhost:5000/api/\";\n        this.httpClient.configure(config => {\n            config\n                .withBaseUrl(this.BASE_URL)\n                .withDefaults({\n                credentials: 'same-origin',\n                headers: {\n                    'Accept': 'application/json',\n                    'X-Requested-With': 'Fetch'\n                }\n                })\n                .withInterceptor({\n                request(request) {\n                    var authHeader = 'Bearer ' + localStorage.getItem('aurelia_token')\n                                        request.headers.append('Authorization', authHeader);                    \n                    console.log(`Requesting ${request.method} ${request.url}`);\n                    return request;\n                },\n                response(response) {\n                    console.log(`Received ${response.status} ${response.url}`);\n                    return response;\n                }\n                });\n            });\n    }\n    get(url) {\n\t\treturn this.httpClient.fetch(url)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\treturn data;\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\treturn error;\n\t\t\t});\n\t}\n    post(content, url) {\n\t\treturn this.httpClient\n\t\t\t.fetch(url, {\n\t\t\t\tmethod: 'post',\n\t\t\t\tbody: json(content)\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(object => {\n\t\t\t\treturn object;\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\treturn error;\n\t\t\t});\n\t}\n    put(content, url) {\n\t\treturn this.httpClient\n\t\t\t.fetch(url, {\n\t\t\t\tmethod: 'put',\n\t\t\t\tbody: json(content)\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(object => {\n\t\t\t\treturn object;\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\treturn error;\n\t\t\t});\n\t}\n    delete(url) {\n\t\treturn this.httpClient\n\t\t\t.fetch(url, {\n\t\t\t\tmethod: 'delete'\n\t\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(object => {\n\t\t\t\treturn object;\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\treturn error ;\n\t\t\t});\n\t}\n    uploadFiles(files, url){\n            return this.httpClient\n            .fetch(url, {\n                method: 'post',\n                body: files\n            })\n            .then(response => response.json())\n            .then(object => {\n                return object;\n            })\n            .catch(error => {\n                return error;\n            });\n        }\n        \n\n}\n","import { inject } from 'aurelia-framework';\nimport { DataServices } from './data-services';\n@inject(DataServices)\nexport class Galleries {\n    constructor(data) {\n        this.data = data;\n        this.GALLERY_SERVICE = 'galleries';\n        this.galleriesArray = [];\n        this.user = JSON.parse(sessionStorage.getItem('user'));\n        this.showList = true;\n    }\n    async getUserGallery(id) {\n        let response = await this.data.get(this.GALLERY_SERVICE + \"/user/\" + id);\n        if (!response.error && !response.message) {\n            this.galleriesArray = response;\n        }\n    }\n\n    async deleteGallery(id){\n\t\tlet response = await this.data.delete(this.GALLERY_SERVICE + \"/\" + id);\n\t\tif(!response.error){\n\t\t\tfor(let i = 0; i < this.galleriesArray.length; i++){\n\t\t\t\tif(this.galleriesArray[i]._id === id){\n\t\t\t\t\tthis.galleriesArray.splice(i,1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    }\n    async uploadFile(files, userId, galleryId){\n                let formData = new FormData();\n        \u000b        files.forEach((item, index) => {\n            formData.append(\"file\" + index, item);\n                });\n            \n            let response = await this.data.uploadFiles(formData, this.GALLERY_SERVICE + \u000b\t\t\"/upload/\" + userId + \"/\" + galleryId);\n            return response;\n        }\n        \n\n\n\n    async save(gallery) {\n        if (gallery) {\n            if (!gallery._id) {\n                let serverResponse = await this.data.post(gallery, this.GALLERY_SERVICE);\n                if (!serverResponse.error) {\n                    this.galleriesArray.push(serverResponse);\n                }\n                return serverResponse;\n            } else {\n                let serverResponse = await this.data.put(gallery, this.GALLERY_SERVICE + \"/\" + gallery._id);\n                if (!serverResponse.error) {\n                    // this.updateArray(response);\n                }\n                return serverResponse;\n            }\n        }\n\n    }\n}\n","import { inject } from 'aurelia-framework';\nimport { DataServices } from './data-services';\n@inject(DataServices)\nexport class MyPics {\n    constructor(data) {\n        this.data = data;\n        this.PICS_SERVICE = 'mypics';\n        this.mypicsArray = [];\n        this.user = JSON.parse(sessionStorage.getItem('user'));\n        this.showList = true;\n    }\n    async getUserPics(id) {\n        let response = await this.data.get(this.PICS_SERVICE + \"/gallery/\" + id);\n        if (!response.error && !response.message) {\n            this.mypicsArray = response;\n        }\n    }\n\n    async deletePics(id){\n\t\tlet response = await this.data.delete(this.PICS_SERVICE + \"/\" + id);\n\t\tif(!response.error){\n\t\t\tfor(let i = 0; i < this.mypicsArray.length; i++){\n\t\t\t\tif(this.mypicsArray[i]._id === id){\n\t\t\t\t\tthis.mypicsArray.splice(i,1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    }\n    async uploadFile(files, userId, picsId){\n                let formData = new FormData();\n        \u000b        files.forEach((item, index) => {\n            formData.append(\"file\" + index, item);\n                });\n            \n            let response = await this.data.uploadFiles(formData, this.PICS_SERVICE + \u000b\t\t\"/upload/\" + userId + \"/\" + picsId);\n            return response;\n        }\n        \n\n\n\n    async save(pics) {\n        if (pics) {\n            if (!pics._id) {\n                let serverResponse = await this.data.post(pics, this.PICS_SERVICE);\n                if (!serverResponse.error) {\n                    this.mypicsArray.push(serverResponse);\n                }\n                return serverResponse;\n            } else {\n                let serverResponse = await this.data.put(pics, this.PICS_SERVICE + \"/\" + pics._id);\n                if (!serverResponse.error) {\n                    // this.updateArray(response);\n                }\n                return serverResponse;\n            }\n        }\n\n    }\n}\n","import {inject} from 'aurelia-framework';\nimport {DataServices} from './data-services';\n\u000b@inject(DataServices)\nexport class Users {\n\u000bconstructor(data) {\n        this.data = data;\n        this.USER_SERVICE = 'users';\n    }\n\nasync save(user){\n    if(user){\n  let serverResponse = await this.data.post(user, this.USER_SERVICE);\n         return serverResponse;\n }\n}\n\n}\n\n","import {inject, bindable, bindingMode} from 'aurelia-framework';\nimport Flatpickr from 'flatpickr';\n\u000b@inject(Element)\nexport class FlatPickerCustomElement {\n\u000b@bindable({defaultBindingMode: bindingMode.twoWay}) value;\n\u000bconstructor(element) {\n  this.element = element;\n}\nbind() {\n            const defaultConfig = {\n                \taltInput: true,\n                \taltFormat: \"F j, Y\",\n        wrap: true\n            };\n    \u000b        this._config = Object.assign({}, defaultConfig);\n            this._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\n        }\n    attached() {\n                this.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\n         }\n        \u000bonChange(selectedDates, dateStr, instance) {\n                this.value = selectedDates[0] \n        }\n        valueChanged() {\n                if (!this.flatpickr) {\n                    return;\n                }\n            \u000b    if (this.value === this.flatpickr.selectedDates[0]){\n                    return;\n                }\n            \u000b    let newDate = this.value ? this.value : undefined;      \n            \u000b    this.flatpickr.setDate(newDate);\n            }\n            }\n                        ","import moment from 'moment';\n\u000bexport class DateFormatValueConverter {\n\u000btoView(value) {\nif(value === undefined || value === null){\n\treturn;\n    \t\t}\n    \n    \t\treturn moment(value).format('MMM Do YYYY');\n\t}\n}\n"],"sourceRoot":".."}